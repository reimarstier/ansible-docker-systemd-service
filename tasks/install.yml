---
- name: Create ENV file for {{ container_name }}_container.service
  template:
    src: env.j2
    dest: "{{ sysconf_dir }}/{{ container_name }}"
    owner: root
    group: root
    mode: '0600'
  when: container_env is defined
  notify: restart container {{ container_name }}

# use `command` instead of `docker_image` so we don't have to install docker-py
- name: Pull image {{ container_image }}
  command: docker pull {{ container_image }}
  when: container_docker_pull

# TODO: Add handler to restart service after new image has been pulled
- name: Create unit {{ container_name }}_container.service
  template:
    src: unit.j2
    dest: /etc/systemd/system/{{ container_name }}_container.service
    owner: root
    group: root
    mode: '0644'
  notify: restart container {{ container_name }}

- name: Enable and start {{ container_name }}
  systemd:
    name: '{{ container_name }}_container.service'
    daemon_reload: true
    enabled: "{{ service_enabled }}"
    masked: "{{ service_masked }}"
    state: "{{ service_state }}"
  register: enable_and_start

- name: Restart container immediately if necessary
  meta: flush_handlers
